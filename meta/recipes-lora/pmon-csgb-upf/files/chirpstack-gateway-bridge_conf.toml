# This configuration provides a Semtech UDP packet-forwarder backend and
# integrates with a MQTT broker. Many options and defaults have been omitted
# for simplicity.
#
# See https://www.chirpstack.io/gateway-bridge/install/config/ for a full
# configuration example and documentation.

# Integration configuration.
[integration]
  # Payload marshaler.
  #
  # This defines how the MQTT payloads are encoded. Valid options are:
  # * protobuf:  Protobuf encoding (this will become the ChirpStack Gateway Bridge v3 default)
  # * json:      JSON encoding (easier for debugging, but less compact than 'protobuf')
  marshaler="protobuf"

  # MQTT authentication.
  [integration.mqtt]

  # MQTT authentication.
  [integration.mqtt.auth]
    # Type defines the MQTT authentication type to use.
    #
    # Set this to the name of one of the sections below.
    type="generic"

      # Generic MQTT authentication.
      [integration.mqtt.auth.generic]
      # MQTT server (e.g. scheme://host:port where scheme is tcp, ssl or ws)
      server="tcp://127.0.0.1:1883"

      # Connect with the given username (optional)
      username=""

      # Connect with the given password (optional)
      password=""


# Filters.
#
# These can be used to filter LoRaWAN frames to reduce bandwith usage between
# the gateway and ChirpStack Gateway Bridge. Depending the used backend, filtering
# will be performed by the Packet Forwarder or ChirpStack Gateway Bridge.
[filters]

  # NetIDs filters.
  #
  # The configured NetIDs will be used to filter uplink data frames.
  # When left blank, no filtering will be performed on NetIDs.
  #
  # Example:
  # net_ids=[
  #   "000000",
  #   "000001",
  # ]
  net_ids=[
  ]

  # JoinEUI filters.
  #
  # The configured JoinEUI ranges will be used to filter join-requests.
  # When left blank, no filtering will be performed on JoinEUIs.
  #
  # Example:
  # join_euis=[
  #   ["0000000000000000", "00000000000000ff"],
  #   ["000000000000ff00", "000000000000ffff"],
  # ]
  join_euis=[
  ]

# Gateway backend configuration.
[backend]
  # Backend type.
  type="semtech_udp"

  # Semtech UDP packet-forwarder backend.
  [backend.semtech_udp]

    # ip:port to bind the UDP listener to
    #
    # Example: 0.0.0.0:1700 to listen on port 1700 for all network interfaces.
    # This is the listeren to which the packet-forwarder forwards its data
    # so make sure the 'serv_port_up' and 'serv_port_down' from your
    # packet-forwarder matches this port.
    udp_bind = "127.0.0.1:1700"


[general]

  # debug=5, info=4, warning=3, error=2, fatal=1, panic=0
  log_level=4
