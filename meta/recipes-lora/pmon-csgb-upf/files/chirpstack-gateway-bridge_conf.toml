# This configuration provides a Semtech UDP packet-forwarder backend and
# integrates with a MQTT broker. Many options and defaults have been omitted
# for simplicity.
#
# See https://www.chirpstack.io/gateway-bridge/install/config/ for a full
# configuration example and documentation.


# Gateway backend configuration.
[backend]
# Backend type.
type="semtech_udp"

  # Semtech UDP packet-forwarder backend.
  [backend.semtech_udp]

  # ip:port to bind the UDP listener to
  #
  # Example: 0.0.0.0:1700 to listen on port 1700 for all network interfaces.
  # This is the listeren to which the packet-forwarder forwards its data
  # so make sure the 'serv_port_up' and 'serv_port_down' from your
  # packet-forwarder matches this port.
  udp_bind = "127.0.0.1:1700"

    # Managed packet-forwarder configuration.
    #
    # By configuring one or multiple managed packet-forwarder sections, the
    # ChirpStack Gateway Bridge updates the configuration when the backend receives
    # a configuration change, after which it will restart the packet-forwarder.
    #
    # Example (this configuration can be repeated):
    
    # [[backend.semtech_udp.configuration]]
    # # Gateway ID.
    # #
    # # The ChirpStack Gateway Bridge will only apply the configuration updates for this
    # # gateway ID.
    # gateway_id="AA555A0000000000"
    # 
    # # Base configuration file.
    # #
    # # This file will be used as base-configuration and will not be overwritten on
    # # a configuration update. This file needs to exist and contains the base
    # # configuration and vendor specific
    # base_file="/etc/udp-packet-forwarder/gateway/chirpstack-gateway-bridge/gateway_global_conf.json"
    # 
    # # Output configuration file.
    # #
    # # This will be the final configuration for the packet-forwarder, containing
    # # a merged version of the base configuration + the requested configuration
    # # update.
    # # Warning: this file will be overwritten on a configuration update!
    # output_file="/etc/udp-packet-forwarder/gateway/chirpstack-gateway-bridge/gateway_local_conf.json"
    # 
    # # Restart command.
    # #
    # # This command is issued by the ChirpStack Gateway Bridge on a configuration
    # # change. Make sure the ChirpStack Gateway Bridge process has sufficient
    # # permissions to execute this command.
    # restart_command="/usr/sbin/pmcli services chirpstack-gateway-bridge-udp udp-packet-forwarder restart"

# Integration configuration.
[integration]
# Payload marshaler.
#
# This defines how the MQTT payloads are encoded. Valid options are:
# * protobuf:  Protobuf encoding (this will become the ChirpStack Gateway Bridge v3 default)
# * json:      JSON encoding (easier for debugging, but less compact than 'protobuf')
marshaler="protobuf"

  # MQTT integration configuration.
  [integration.mqtt]
  # Event topic template.
  event_topic_template="gateway/{{ .GatewayID }}/event/{{ .EventType }}"

  # Command topic template.
  command_topic_template="gateway/{{ .GatewayID }}/command/#"

  # MQTT authentication.
  [integration.mqtt.auth]
  # Type defines the MQTT authentication type to use.
  #
  # Set this to the name of one of the sections below.
  type="generic"

    # Generic MQTT authentication.
    [integration.mqtt.auth.generic]
    # MQTT server (e.g. scheme://host:port where scheme is tcp, ssl or ws)
    server="tcp://127.0.0.1:1883"

    # Connect with the given username (optional)
    username=""

    # Connect with the given password (optional)
    password=""
